{
	// Place your 02_linqQueries workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
"Create a namespace structure": {
	"prefix": "namespace",
	"body": [
		"using System;",
		"namespace linqQueries",
		"{",
		"}"
	],
	"description": "Create a namespace structure"
},
	"Create ingridient class": {
  "prefix": "ingredient",
  "body": [
    "class Ingredient",
    "{",
    "public string Name { get; set; }",
    "public int Calories { get; set; }",
    "}"
  ],
  "description": "Create ingridient class"
},
"Create some ingredient objects": {
	"prefix": "ingr",
	"body": [
		"Ingredient[] ingredients =",
		"{",
		"new Ingredient{Name = \"Sugar\", Calories=500},",
		"new Ingredient{Name = \"Egg\", Calories=100},",
		"new Ingredient{Name = \"Milk\", Calories=150},",
		"new Ingredient{Name = \"Flour\", Calories=50},",
		"new Ingredient{Name = \"Butter\", Calories=200}",
		"};"
	],
	"description": "Create some ingredient objects"
},
"Create foreach into objects": {
  "prefix": "foreachingr",
  "body": [
    "",
    "      foreach (var item in ingredients)",
    "      {",
    "        System.Console.WriteLine(ingredients);",
    "      }"
  ],
  "description": "Create foreach into objects"
}
}